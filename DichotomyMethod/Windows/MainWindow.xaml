<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DichotomyMethod"
        xmlns:oxy="http://oxyplot.org/wpf" x:Class="DichotomyMethod.MainWindow"
        mc:Ignorable="d"
        Title="Метод дихотомии" Height="450" Width="800">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RoundedButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="15" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.Background>
            <ImageBrush ImageSource="/Windows/тетрадь.jpg" Stretch="Fill" TileMode="None"/>
        </Grid.Background>
        <Grid.Style>
            <Style/>
        </Grid.Style>
        <Grid Margin="10,10,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="246" Height="272">
            <TextBlock x:Name="labelFunction" Margin="10,10,122,178" TextWrapping="Wrap" Text="f(x) = " FontFamily="Verdana" FontSize="22"/>
            <TextBlock x:Name="labela" Margin="0,59,179,0" TextWrapping="Wrap" Text="a = " FontFamily="Verdana" FontSize="22" HorizontalAlignment="Right" Width="57" Height="24" VerticalAlignment="Top"/>
            <TextBlock x:Name="labelb" TextWrapping="Wrap" Text="b = " FontFamily="Verdana" FontSize="22" HorizontalAlignment="Right" Width="54" Height="22" VerticalAlignment="Top" Margin="0,105,182,0" />
            <TextBox x:Name="tbFunction" HorizontalAlignment="Left" Height="31" Margin="81,12,0,0" TextWrapping="Wrap" Text="Функция" VerticalAlignment="Top" Width="155" FontSize="22"/>
            <TextBox x:Name="tba" HorizontalAlignment="Left" Height="31" Margin="81,57,0,0" TextWrapping="Wrap" Text="Min" VerticalAlignment="Top" Width="155" FontSize="22"/>
            <TextBox x:Name="tbb" HorizontalAlignment="Left" Height="31" Margin="81,105,0,0" TextWrapping="Wrap" Text="Max" VerticalAlignment="Top" Width="155" FontSize="22"/>
            <TextBox x:Name="tbXEnd" HorizontalAlignment="Left" Height="31" Margin="166,160,0,0" TextWrapping="Wrap" Text="Max" VerticalAlignment="Top" Width="70" FontSize="22"/>
            <TextBox x:Name="tbXStart" HorizontalAlignment="Left" Height="31" Margin="10,160,0,0" TextWrapping="Wrap" Text="Min" VerticalAlignment="Top" Width="70" FontSize="22"/>
            <Label Content="↔" HorizontalAlignment="Center" Height="54" Margin="0,148,0,0" VerticalAlignment="Top" Width="42" FontFamily="Verdana" FontSize="36"/>
            <TextBlock x:Name="labelb_Копировать" TextWrapping="Wrap" Text="e = " FontFamily="Verdana" FontSize="22" HorizontalAlignment="Right" Width="54" Height="22" VerticalAlignment="Top" Margin="0,209,182,0" />
            <TextBox x:Name="tbe" HorizontalAlignment="Left" Height="31" Margin="81,209,0,0" TextWrapping="Wrap" Text="0,00001" VerticalAlignment="Top" Width="155" FontSize="22"/>
        </Grid>
        <Grid Margin="0,0,10,10" Height="72" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="279">
            <Grid.RowDefinitions>
                <RowDefinition Height="25*"/>
                <RowDefinition Height="17*"/>
                <RowDefinition Height="30*"/>
            </Grid.RowDefinitions>
            <Button x:Name="buttonSolve" Style="{DynamicResource RoundedButtonStyle}" Content="Построить функцию" HorizontalAlignment="Right" Height="41" Margin="0,21,10,0" VerticalAlignment="Top" Width="209" BorderBrush="#FF508A48" Background="#FF2ACC34" Foreground="White" FontFamily="Verdana" FontSize="18" Cursor="Pen" RenderTransformOrigin="0,0" Click="buttonSolve_Click" Grid.RowSpan="3"/>
            <Button x:Name="buttonDichotomy_Solve" Style="{DynamicResource RoundedButtonStyle}" Content="Метод дихотомии" HorizontalAlignment="Left" Height="41" Margin="-173,21,0,0" VerticalAlignment="Top" Width="209" BorderBrush="#FF508A48" Background="#FFE84F15" Foreground="White" FontFamily="Verdana" FontSize="18" Cursor="Pen" RenderTransformOrigin="0,0" Grid.RowSpan="3" Click="buttonDichotomy_Solve_Click"/>
        </Grid>
        <Grid Margin="385,48,46,120">
            <oxy:PlotView x:Name="pvGraph" Margin="10,10,10,10" Background="{x:Null}"/>
        </Grid>
    </Grid>
</Window>
